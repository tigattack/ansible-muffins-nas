- name: Ensure base mount point exists
  ansible.builtin.file:
    path: "/mnt/btrfs-root"
    state: directory

- name: Ensure individual mount point exists
  ansible.builtin.file:
    path: "/mnt/btrfs-root/{{ item | basename }}"
    state: directory
  loop: "{{ data_disks }}"
  loop_control:
    label: "{{ item }}"

- name: Mount the Btrfs filesystem
  ansible.builtin.mount:
    path: "/mnt/btrfs-root/{{ item | basename }}"
    src: "{{ item }}-part1"
    fstype: btrfs
    state: mounted
  loop: "{{ data_disks }}"
  loop_control:
    label: "{{ item }}"

- name: Check if data subvolume exists
  shell: "btrfs subvolume list /mnt/btrfs-root/{{ item | basename }} | grep data"
  loop: "{{ data_disks }}"
  register: subvolume_check
  ignore_errors: true

- name: Create Btrfs data subvolume using command
  command: "btrfs subvolume create /mnt/btrfs-root/{{ item.item | basename }}/data"
  loop: "{{ subvolume_check.results }}"
  when: "'data' not in item.stdout"
  loop_control:
    label: "{{ item }}"
  ignore_errors: yes

- name: Unmount the fs
  command: "umount /mnt/btrfs-root/{{ item | basename }}"
  loop: "{{ data_disks }}"
  loop_control:
    label: "{{ item }}"

- name: Remove individual mount points
  ansible.builtin.file:
    path: "/mnt/btrfs-root/{{ item | basename }}"
    state: absent
  loop: "{{ data_disks }}"
  loop_control:
    label: "{{ item }}"
